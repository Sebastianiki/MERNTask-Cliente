{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaSeleccionada: null\n  };\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const agregarTareas = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const validarTarea = mostrarError => {\n    dispatch({\n      type: VALIDAR_TAREA,\n      payload: mostrarError\n    });\n  };\n\n  const eliminarTarea = async (tareaId, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${tareaId}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: tareaId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tareaExiste\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const limpiarTarea = () => {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaSeleccionada: state.tareaSeleccionada,\n      obtenerTareas,\n      agregarTareas,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      limpiarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["D:/Cursos/MERN/MERNTask/cliente/src/context/tareas/tareaState.js"],"names":["useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaSeleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","type","payload","data","tareas","error","console","log","agregarTareas","tarea","post","validarTarea","mostrarError","eliminarTarea","tareaId","delete","guardarTareaActual","actualizarTarea","put","_id","tareaExiste","limpiarTarea","children"],"mappings":"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","sourcesContent":["import {useReducer} from 'react'\r\nimport TareaContext from './tareaContext'\r\nimport TareaReducer from './tareaReducer'\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    ESTADO_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst TareaState = props => {\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaSeleccionada: null\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(TareaReducer,initialState)\r\n\r\n    const obtenerTareas = async proyecto =>{\r\n        try{\r\n            const resultado = await clienteAxios.get('/api/tareas', { params : {proyecto}})\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload : resultado.data.tareas\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const agregarTareas = async tarea => {\r\n        try{\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea)\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    const validarTarea = mostrarError =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA,\r\n            payload: mostrarError\r\n        })\r\n    }\r\n\r\n    const eliminarTarea = async (tareaId, proyecto) =>{\r\n        try{\r\n            await clienteAxios.delete(`/api/tareas/${tareaId}`, {params : {proyecto}})\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload : tareaId\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    const actualizarTarea = async tarea =>{\r\n        try{\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea)\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tareaExiste\r\n            })\r\n        }catch(error){\r\n            console.log(error )\r\n        }\r\n    }\r\n\r\n    const limpiarTarea = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaSeleccionada: state.tareaSeleccionada,\r\n                obtenerTareas,\r\n                agregarTareas,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState"]},"metadata":{},"sourceType":"module"}