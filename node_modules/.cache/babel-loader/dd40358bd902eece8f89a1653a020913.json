{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\";\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA, LIMPIAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nvar TareaState = function TareaState(props) {\n  var initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaSeleccionada: null\n  };\n\n  var _useReducer = useReducer(TareaReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var obtenerTareas = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(proyecto) {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clienteAxios.get('/api/tareas', {\n                params: {\n                  proyecto: proyecto\n                }\n              });\n\n            case 3:\n              resultado = _context.sent;\n              dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function obtenerTareas(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var agregarTareas = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tarea) {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return clienteAxios.post('/api/tareas', tarea);\n\n            case 3:\n              resultado = _context2.sent;\n              dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function agregarTareas(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validarTarea = function validarTarea(mostrarError) {\n    dispatch({\n      type: VALIDAR_TAREA,\n      payload: mostrarError\n    });\n  };\n\n  var eliminarTarea = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tareaId, proyecto) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return clienteAxios.delete(\"/api/tareas/\".concat(tareaId), {\n                params: {\n                  proyecto: proyecto\n                }\n              });\n\n            case 3:\n              dispatch({\n                type: ELIMINAR_TAREA,\n                payload: tareaId\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 6]]);\n    }));\n\n    return function eliminarTarea(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var guardarTareaActual = function guardarTareaActual(tarea) {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  var actualizarTarea = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tarea) {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return clienteAxios.put(\"/api/tareas/\".concat(tarea._id), tarea);\n\n            case 3:\n              resultado = _context4.sent;\n              dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tareaExiste\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function actualizarTarea(_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var limpiarTarea = function limpiarTarea() {\n    dispatch({\n      type: LIMPIAR_TAREA\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaSeleccionada: state.tareaSeleccionada,\n      obtenerTareas: obtenerTareas,\n      agregarTareas: agregarTareas,\n      validarTarea: validarTarea,\n      eliminarTarea: eliminarTarea,\n      guardarTareaActual: guardarTareaActual,\n      actualizarTarea: actualizarTarea,\n      limpiarTarea: limpiarTarea\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["D:/Cursos/MERN/MERNTask/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaSeleccionada","state","dispatch","obtenerTareas","proyecto","get","params","resultado","type","payload","data","tareas","console","log","agregarTareas","tarea","post","validarTarea","mostrarError","eliminarTarea","tareaId","delete","guardarTareaActual","actualizarTarea","put","_id","tareaExiste","limpiarTarea","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\r\nimport TareaContext from './tareaContext'\r\nimport TareaReducer from './tareaReducer'\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from '../../types'\r\nimport clienteAxios from '../../config/axios'\r\n\r\nconst TareaState = props => {\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaSeleccionada: null\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(TareaReducer,initialState)\r\n\r\n    const obtenerTareas = async proyecto =>{\r\n        try{\r\n            const resultado = await clienteAxios.get('/api/tareas', { params : {proyecto}})\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload : resultado.data.tareas\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const agregarTareas = async tarea => {\r\n        try{\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea)\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    const validarTarea = mostrarError =>{\r\n        dispatch({\r\n            type: VALIDAR_TAREA,\r\n            payload: mostrarError\r\n        })\r\n    }\r\n\r\n    const eliminarTarea = async (tareaId, proyecto) =>{\r\n        try{\r\n            await clienteAxios.delete(`/api/tareas/${tareaId}`, {params : {proyecto}})\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload : tareaId\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const guardarTareaActual = tarea =>{\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n    const actualizarTarea = async tarea =>{\r\n        try{\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea)\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tareaExiste\r\n            })\r\n        }catch(error){\r\n            console.log(error )\r\n        }\r\n    }\r\n\r\n    const limpiarTarea = () =>{\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaSeleccionada: state.tareaSeleccionada,\r\n                obtenerTareas,\r\n                agregarTareas,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState"]},"metadata":{},"sourceType":"module"}