{"ast":null,"code":"import _defineProperty from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Cursos\\\\MERN\\\\MERNTask\\\\cliente\\\\src\\\\components\\\\tareas\\\\FormTareas.js\";\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { Form, Button, Container, Overlay } from 'react-bootstrap';\nimport ProyectoContext from '../../context/Proyectos/proyectoContext';\nimport TareaContext from '../../context/tareas/tareaContext';\nimport './FormTareas.css';\n\nvar FormTareas = function FormTareas() {\n  var proyectosContext = useContext(ProyectoContext);\n  var proyecto = proyectosContext.proyecto;\n  var tareasContext = useContext(TareaContext);\n  var tareaSeleccionada = tareasContext.tareaSeleccionada,\n      errortarea = tareasContext.errortarea,\n      agregarTareas = tareasContext.agregarTareas,\n      validarTarea = tareasContext.validarTarea,\n      obtenerTareas = tareasContext.obtenerTareas,\n      actualizarTarea = tareasContext.actualizarTarea,\n      limpiarTarea = tareasContext.limpiarTarea;\n\n  var _useState = useState({\n    nombre: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tarea = _useState2[0],\n      guardarTarea = _useState2[1];\n\n  var nombre = tarea.nombre;\n  var target = useRef(null);\n  useEffect(function () {\n    if (tareaSeleccionada !== null) {\n      guardarTarea(tareaSeleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaSeleccionada]);\n  if (!proyecto) return null;\n\n  var _proyecto = _slicedToArray(proyecto, 1),\n      proyectoSeleccionado = _proyecto[0];\n\n  var handleChange = function handleChange(e) {\n    guardarTarea(_objectSpread({}, tarea, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n\n    if (nombre.trim() === '') {\n      validarTarea(true);\n      return;\n    }\n\n    validarTarea(false);\n\n    if (tareaSeleccionada === null) {\n      tarea.proyecto = proyectoSeleccionado._id;\n      console.log(tarea);\n      agregarTareas(tarea);\n    } else {\n      actualizarTarea(tarea);\n      limpiarTarea();\n    }\n\n    obtenerTareas(proyectoSeleccionado._id);\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"containerFormTareas d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"w-50\",\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Ingresa un nombre a tu tarea\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    ref: target,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), errortarea ? /*#__PURE__*/React.createElement(Overlay, {\n    target: target.current,\n    show: true,\n    placement: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      style: _objectSpread({\n        backgroundColor: 'rgba(255, 100, 100, 0.85)',\n        marginBottom: '5px',\n        padding: '2px 10px',\n        color: 'white',\n        borderRadius: 3\n      }, props.style),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }), \"El nombre de la tarea es obligatorio\");\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"none\",\n    type: \"submit\",\n    className: \"btnAgregarTarea\",\n    block: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, tareaSeleccionada ? 'EDITAR TAREA' : 'AGREGAR TAREA')));\n};\n\nexport default FormTareas;","map":{"version":3,"sources":["D:/Cursos/MERN/MERNTask/cliente/src/components/tareas/FormTareas.js"],"names":["React","useContext","useState","useRef","useEffect","Form","Button","Container","Overlay","ProyectoContext","TareaContext","FormTareas","proyectosContext","proyecto","tareasContext","tareaSeleccionada","errortarea","agregarTareas","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","nombre","tarea","guardarTarea","target","proyectoSeleccionado","handleChange","e","name","value","onSubmit","preventDefault","trim","_id","console","log","current","props","backgroundColor","marginBottom","padding","color","borderRadius","style"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useRef, useEffect} from 'react'\r\nimport {Form, Button, Container, Overlay} from 'react-bootstrap'\r\nimport ProyectoContext from '../../context/Proyectos/proyectoContext'\r\nimport TareaContext from '../../context/tareas/tareaContext'\r\nimport './FormTareas.css'\r\n\r\nconst FormTareas = () => {\r\n    const proyectosContext = useContext(ProyectoContext)\r\n    const {proyecto} = proyectosContext\r\n    const tareasContext = useContext(TareaContext)\r\n    const {tareaSeleccionada, errortarea, agregarTareas, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea} = tareasContext\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre : ''\r\n    })\r\n    const {nombre} = tarea\r\n    const target = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(tareaSeleccionada !== null){\r\n            guardarTarea(tareaSeleccionada)\r\n        } else{ \r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    },[tareaSeleccionada])\r\n\r\n    if(!proyecto) return null\r\n    const [proyectoSeleccionado] = proyecto\r\n    const handleChange = e =>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(nombre.trim() === '') {\r\n            validarTarea(true)\r\n            return\r\n        }\r\n        validarTarea(false)\r\n        if(tareaSeleccionada === null) {\r\n            tarea.proyecto = proyectoSeleccionado._id\r\n            console.log(tarea)\r\n            agregarTareas(tarea)\r\n        } else {\r\n            actualizarTarea(tarea)\r\n            limpiarTarea()\r\n        }\r\n        \r\n        obtenerTareas(proyectoSeleccionado._id)\r\n        guardarTarea({nombre: ''})\r\n    }\r\n    return (\r\n        <Container className='containerFormTareas d-flex justify-content-center align-items-center'>\r\n            <Form \r\n                className='w-50'\r\n                onSubmit={onSubmit}\r\n                >\r\n                <Form.Group>\r\n                    <Form.Control\r\n                        type=\"text\" \r\n                        placeholder=\"Ingresa un nombre a tu tarea\"\r\n                        name='nombre'\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                        ref={target}\r\n                        /> \r\n                </Form.Group>\r\n                {errortarea\r\n                    ?   <Overlay target={target.current} show={true} placement=\"top\">\r\n                            {(props) => (\r\n                                <div\r\n                                    {...props}\r\n                                    style={{\r\n                                        backgroundColor: 'rgba(255, 100, 100, 0.85)',\r\n                                        marginBottom: '5px',\r\n                                        padding: '2px 10px',\r\n                                        color: 'white',\r\n                                        borderRadius: 3,\r\n                                        ...props.style,\r\n                                    }}\r\n                                >\r\n                                    El nombre de la tarea es obligatorio\r\n                                </div>\r\n                            )}\r\n                        </Overlay>\r\n                    :   null\r\n                }\r\n                <Button variant=\"none\" type=\"submit\" className='btnAgregarTarea' block>\r\n                    {tareaSeleccionada ? 'EDITAR TAREA' : 'AGREGAR TAREA'}\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n \r\nexport default FormTareas;"]},"metadata":{},"sourceType":"module"}